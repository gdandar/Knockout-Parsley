ko.parsley={},function(){function initKoAddons(){var nativeForEach=Array.prototype.forEach,isArray=Array.isArray||function(obj){return"[object Array]"==toString.call(obj)},each=function(obj,iterator,context){if(null!==obj)if(nativeForEach&&obj.forEach===nativeForEach)obj.forEach(iterator,context);else if(isArray(obj)){for(var i=0,l=obj.length;l>i;i++)if(iterator.call(context,obj[i],i,obj)===breaker)return}else for(var key in obj)if(iterator.call(context,obj[key],key,obj)===breaker)return};ko.extenders.validatable=function(observable,enable){enable&&!observable.rules&&(observable.rules=ko.observableArray())},ko.bindingHandlers.validationCore={update:function(element,valueAccessor,allBindingsAccessor,viewModel){var obs=valueAccessor();if(obs.rules){var parsleyField=$(element).parsley();each(obs.rules(),function(rule){var parsleyAttrName="data-"+rule.rule,attr=$(element).attr(parsleyAttrName);("undefined"==typeof attr||attr===!1)&&(rule.condition&&!rule.condition(viewModel)?$(element).parsley("removeConstraint",rule.rule):(addParsleyConstraint(parsleyField,rule),$(mainForm).parsley("addItem",element)))})}}}}function addExtender(ruleName){ko.extenders[ruleName]||(ko.extenders[ruleName]=function(target,options){return options.condition||options.message?addRule(target,{rule:ruleName,params:options.params,condition:options.condition,message:options.message}):addRule(target,{rule:ruleName,params:options}),target})}function addParsleyConstraint(parsleyField,rule){var name=rule.rule.toLowerCase();"function"==typeof parsleyField.Validator.validators[name]&&(parsleyField.constraints[name]={name:name,requirements:rule.params,valid:null},"required"===name&&(parsleyField.isRequired=!0),rule.message&&(parsleyField.Validator.messages[name]=rule.message),parsleyField.addCustomConstraintMessage(name)),parsleyField.bindValidationEvents()}function overrideBinding(handlerName){var update=ko.bindingHandlers[handlerName].update;ko.bindingHandlers[handlerName].update=function(element,valueAccessor,allBindingsAccessor,viewModel,bindingContext){return update(element,valueAccessor,allBindingsAccessor),ko.bindingHandlers.validationCore.update(element,valueAccessor,allBindingsAccessor,viewModel,bindingContext)}}function addRule(observable,rule){observable.extend({validatable:!0}),observable.rules.push(rule)}var mainForm,allowedRules=["required","notblank","minlength","maxlength","rangelength","min","max","regexp","range","type"];this.init=function(_mainForm){mainForm=_mainForm,initKoAddons(),each(allowedRules,function(value){addExtender(value)}),overrideBinding("value"),overrideBinding("checked")}}.apply(ko.parsley);